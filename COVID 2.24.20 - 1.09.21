Data Source: https://ourworldindata.org/coronavirus#coronavirus-country-profiles

Visualization with Tabealu: https://public.tableau.com/views/CoronavirusintheGlobe/Dashboard1?:language=en-US&:display_count=n&:origin=viz_share_link



-- Looking at total cases vs total death 

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as death_percentage FROM `crucial-kayak-218302.covid.covid_deaths` 
WHERE location LIKE '%States%'
ORDER BY 1,2


-- Looking at global case, death percentage for each date

SELECT  date,SUM(total_cases) as CaseCount,SUM(total_deaths) as DeathCount, SUM(population) as Population, 
(SUM(total_cases)/SUM(population))*100 as case_percentage, (SUM(total_deaths)/SUM(total_cases))*100 as death_percentage FROM `crucial-kayak-218302.covid.covid_deaths` 
 WHERE continent is not NULL 
GROUP BY date
ORDER BY date

-- Looking at countries with highest infection rate on 1/1/22

SELECT location, date, total_cases, population, (total_cases/population)*100 as case_percentage FROM `crucial-kayak-218302.covid.covid_deaths` 
WHERE date = '2022-01-01'
ORDER BY case_percentage DESC


-- Looking at countries with the highest infenction rate 

SELECT location, MAX(total_cases) as total_case, population, MAX(total_cases/population)*100 as case_percentage FROM `crucial-kayak-218302.covid.covid_deaths` 
GROUP BY location, population
ORDER BY case_percentage DESC


-- Looking at countries with highest covid death count per population and per case

SELECT location, Max(total_deaths) as DeathCount,MAX(total_cases) as total_case, population, (Max(total_deaths)/population)*100 as death_percentage_pop, 
(MAX(total_deaths)/MAX(total_cases))*100 as death_percentage_case FROM `crucial-kayak-218302.covid.covid_deaths` 
WHERE continent is not NULL
GROUP BY location, population
ORDER BY death_percentage_case DESC


-- Looking at death count per continent 

SELECT location, SUM(new_deaths) as TotalDeaths FROM `crucial-kayak-218302.covid.covid_deaths` 
WHERE continent is NULL AND location not in ('World', 'European Union','International') AND RIGHT(location,6) not in ('income')
GROUP BY location
ORDER BY TotalDeaths desc



-- Global Numbers: death percentage per case for each date

SELECT date, SUM(new_cases) as total_case, SUM(new_deaths) as total_death, (SUM(new_deaths)/SUM(new_cases)) as death_percentage  FROM `crucial-kayak-218302.covid.covid_deaths` 
WHERE continent is not NULL
GROUP BY date
ORDER By date



-- Global Numbers: cumulative infection cases 

SELECT date, SUM(total_cases) FROM `crucial-kayak-218302.covid.covid_deaths` 
WHERE continent is not NULL
GROUP BY date
ORDER By date



-- Global Numbers: death percentage

SELECT SUM(new_cases) as total_case, SUM(new_deaths) as total_death, (SUM(new_deaths)/SUM(new_cases))*100 as death_percentage  FROM `crucial-kayak-218302.covid.covid_deaths`  
WHERE continent is not NULL 



-- percentage of people who got vaccinated at least 1 dose by country for each date

SELECT dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (Partition by dea.location ORDER BY dea.location, dea.date) as total_vaccinations
FROM `crucial-kayak-218302.covid.covid_deaths` as dea
    JOIN `crucial-kayak-218302.covid.vaccinations`  as vac
    ON dea.location = vac.location AND dea.date = vac.date
WHERE dea.continent is not NULL 
ORDER BY dea.location, dea.date


-- fully vaccinated percentage (not using partition by) by country for each date
SELECT dea.location, dea.date, dea.population, vac.people_fully_vaccinated, (vac.people_fully_vaccinated/dea.population) as vaccinated_percentage
FROM `crucial-kayak-218302.covid.covid_deaths` as dea
    JOIN `crucial-kayak-218302.covid.vaccinations`  as vac
    ON dea.location = vac.location AND dea.date = vac.date
WHERE dea.continent is not NULL and people_fully_vaccinated is not null
ORDER BY dea.location, dea.date



-- fully vaccinated percentage for each date using CTE 

With vacpop as (
    SELECT dea.location, dea.date, dea.population, vac.people_fully_vaccinated, (vac.people_fully_vaccinated/dea.population) as vaccinated_percentage
FROM `crucial-kayak-218302.covid.covid_deaths` as dea
    JOIN `crucial-kayak-218302.covid.vaccinations`  as vac
    ON dea.location = vac.location AND dea.date = vac.date
WHERE dea.continent is not NULL and people_fully_vaccinated is not null
)

SELECT date, SUM(people_fully_vaccinated), SUM(population), (SUM(people_fully_vaccinated)/SUM(population))*100 as vaccinated_percentage
FROM vacpop
GROUP BY date
ORDER BY date



-- Rolling vaccinated percentage with at least 1 dose using CTE

WITH popvac AS (
    SELECT dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (Partition by dea.location ORDER BY dea.location, dea.date) as rollingpeoplevaccinated
FROM `crucial-kayak-218302.covid.covid_deaths` as dea
    JOIN `crucial-kayak-218302.covid.vaccinations`  as vac
    ON dea.location = vac.location AND dea.date = vac.date
WHERE dea.continent is not NULL
)

SELECT *, (rollingpeoplevaccinated/population)*100 as vaccinated_percentage FROM popvac



-- Rolling vaccinated percentage with at least 1 dose using Temp Table

Begin Create TEMP Table PercentPopulationVaccinated (
    location string(50),
    date date,
    population INT,
    new_vaccinations INT,
    rollingpeoplevaccinated INT
) 
AS 
SELECT dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (Partition by dea.location ORDER BY dea.location, dea.date) as rollingpeoplevaccinated
FROM `crucial-kayak-218302.covid.covid_deaths` as dea
    JOIN `crucial-kayak-218302.covid.vaccinations`  as vac
    ON dea.location = vac.location AND dea.date = vac.date
WHERE dea.continent is not NULL ;  end;

SELECT *, (rollingpeoplevaccinated/population)*100 as vaccinated_percentage FROM PercentPopulationVaccinated;



--Creating view to store data for later visualization 

CREATE VIEW `crucial-kayak-218302.covid.PercentPopulationVaccinated`  AS
SELECT dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (Partition by dea.location ORDER BY dea.location, dea.date) as rollingpeoplevaccinated
FROM `crucial-kayak-218302.covid.covid_deaths` as dea
    JOIN `crucial-kayak-218302.covid.vaccinations`  as vac
    ON dea.location = vac.location AND dea.date = vac.date
WHERE dea.continent is not NULL ;

CREATE VIEW `crucial-kayak-218302.covid.PercentPopulationFullyVaccinated` AS
SELECT dea.location, dea.date, dea.population, vac.people_fully_vaccinated, (vac.people_fully_vaccinated/dea.population) as vaccinated_percentage
FROM `crucial-kayak-218302.covid.covid_deaths` as dea
    JOIN `crucial-kayak-218302.covid.vaccinations`  as vac
    ON dea.location = vac.location AND dea.date = vac.date
WHERE dea.continent is not NULL 
ORDER BY dea.location, dea.date
