--Looking at total cases vs total death 

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as death_percentage FROM `crucial-kayak-218302.covid.covid_deaths` 
WHERE location LIKE '%States%'
ORDER BY 1,2
LIMIT 1000

# Looking at cases vs popoulation

SELECT location, date, total_cases, population, (total_cases/population)*100 as case_percentage FROM `crucial-kayak-218302.covid.covid_deaths` 
WHERE location LIKE '%States%'
ORDER BY 1,2
LIMIT 1000

# Looking at countries with highest infection rate on 1/1/22

SELECT location, date, total_cases, population, (total_cases/population)*100 as case_percentage FROM `crucial-kayak-218302.covid.covid_deaths` 
WHERE date = '2022-01-01'
ORDER BY case_percentage DESC
LIMIT 1000

# Looking at countries with highest infenction rate 

SELECT location, MAX(total_cases) as total_case, population, MAX(total_cases/population)*100 as case_percentage FROM `crucial-kayak-218302.covid.covid_deaths` 
GROUP BY location, population
ORDER BY case_percentage DESC

# Looking at countries with highest covid death count per population

SELECT location, MAX(total_deaths) as total_deaths, population, MAX(total_deaths/population)*100 as death_percentage FROM `crucial-kayak-218302.covid.covid_deaths` 
WHERE continent is not NULL
GROUP BY location, population
ORDER BY death_percentage DESC

# Looking at countries with highest covid death count per case

SELECT location, MAX(total_deaths) as total_death,MAX(total_cases) as total_case, (MAX(total_deaths)/MAX(total_cases))*100 as death_percentage FROM `crucial-kayak-218302.covid.covid_deaths` 
GROUP BY location
ORDER BY death_percentage DESC

# Looking at death count per continent (the data includes misleading columns that might alter results)

SELECT continent, MAX(total_deaths) as total_deaths FROM `crucial-kayak-218302.covid.covid_deaths` 
WHERE continent is not NULL
GROUP BY continent

# Global Numbers: death percentage by day

SELECT date, SUM(new_cases) as total_case, SUM(new_deaths) as total_death, (SUM(new_deaths)/SUM(new_cases)) as death_percentage  FROM `crucial-kayak-218302.covid.covid_deaths` 
WHERE continent is not NULL
GROUP BY date
ORDER By date


-- # Global Numbers: death percentage

SELECT SUM(new_cases) as total_case, SUM(new_deaths) as total_death, (SUM(new_deaths)/SUM(new_cases))*100 as death_percentage  FROM `crucial-kayak-218302.covid.covid_deaths`  
WHERE continent is not NULL 

-- # percentage of people who got vaccinated 

SELECT dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (Partition by dea.location ORDER BY dea.location, dea.date) as total_vaccinations
FROM `crucial-kayak-218302.covid.covid_deaths` as dea
    JOIN `crucial-kayak-218302.covid.vaccinations`  as vac
    ON dea.location = vac.location AND dea.date = vac.date
WHERE dea.continent is not NULL 
ORDER BY dea.location, dea.date

-- vaccinated percentage (not using partition by)
SELECT dea.location, dea.date, dea.population, vac.people_fully_vaccinated, (vac.people_fully_vaccinated/dea.population) as vaccinated_percentage
FROM `crucial-kayak-218302.covid.covid_deaths` as dea
    JOIN `crucial-kayak-218302.covid.vaccinations`  as vac
    ON dea.location = vac.location AND dea.date = vac.date
WHERE dea.continent is not NULL 
ORDER BY dea.location, dea.date

-- use CTE

WITH popvac AS (
    SELECT dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (Partition by dea.location ORDER BY dea.location, dea.date) as rollingpeoplevaccinated
FROM `crucial-kayak-218302.covid.covid_deaths` as dea
    JOIN `crucial-kayak-218302.covid.vaccinations`  as vac
    ON dea.location = vac.location AND dea.date = vac.date
WHERE dea.continent is not NULL
)

SELECT *, (rollingpeoplevaccinated/population)*100 as vaccinated_percentage FROM popvac


-- Using Temp Table

Begin Create TEMP Table PercentPopulationVaccinated (
    location string(50),
    date date,
    population INT,
    new_vaccinations INT,
    rollingpeoplevaccinated INT
) 
AS 
SELECT dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (Partition by dea.location ORDER BY dea.location, dea.date) as rollingpeoplevaccinated
FROM `crucial-kayak-218302.covid.covid_deaths` as dea
    JOIN `crucial-kayak-218302.covid.vaccinations`  as vac
    ON dea.location = vac.location AND dea.date = vac.date
WHERE dea.continent is not NULL ;  end;

SELECT *, (rollingpeoplevaccinated/population)*100 as vaccinated_percentage FROM PercentPopulationVaccinated;


--Creating view to store data for later visualization 

CREATE VIEW `crucial-kayak-218302.covid.PercentPopulationVaccinated`  AS
SELECT dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (Partition by dea.location ORDER BY dea.location, dea.date) as rollingpeoplevaccinated
FROM `crucial-kayak-218302.covid.covid_deaths` as dea
    JOIN `crucial-kayak-218302.covid.vaccinations`  as vac
    ON dea.location = vac.location AND dea.date = vac.date
WHERE dea.continent is not NULL ;

CREATE VIEW `crucial-kayak-218302.covid.PercentPopulationFullyVaccinated` AS
SELECT dea.location, dea.date, dea.population, vac.people_fully_vaccinated, (vac.people_fully_vaccinated/dea.population) as vaccinated_percentage
FROM `crucial-kayak-218302.covid.covid_deaths` as dea
    JOIN `crucial-kayak-218302.covid.vaccinations`  as vac
    ON dea.location = vac.location AND dea.date = vac.date
WHERE dea.continent is not NULL 
ORDER BY dea.location, dea.date
