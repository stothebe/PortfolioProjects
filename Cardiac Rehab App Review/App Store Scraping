from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager
import time
import pandas as pd

# downloading chromedriver https://sites.google.com/chromium.org/driver/

s = Service("/Users/sarahhbang/chromedriver")

driver = webdriver.Chrome(service=s)

driver.get("https://fnd.io/#/")

print(driver.title)

search = driver.find_element(By.XPATH, "//input[@title='Search fnd']") #finding search box
search.send_keys("cardiac rehab") #defining search term
search.send_keys(Keys.RETURN) # returning results
driver.maximize_window()

time.sleep(5)


moreapp_button = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.LINK_TEXT, "More Apps"))
         )
moreapp_button.click()

time.sleep(5)

SCROLL_PAUSE_TIME = 2  # waiting until all pages are loaded

# Get scroll height
last_height = driver.execute_script("return document.body.scrollHeight")
time.sleep(SCROLL_PAUSE_TIME)

while True:
    # Scroll down to bottom
    driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")

    # Wait to load page
    time.sleep(SCROLL_PAUSE_TIME)

    # Calculate new scroll height and compare with last scroll height
    new_height = driver.execute_script("return document.body.scrollHeight")
    if new_height == last_height:
        break
    last_height = new_height

time.sleep(5)

links_apps = []
elems = driver.find_elements(By.XPATH, "//a[@href]")
for elem in elems:
    if "apps.apple.com/us" in elem.get_attribute("href"):
        links_apps.append((elem.get_attribute("href")))

links_apps = list(dict.fromkeys(links_apps))
print(links_apps)

link = []
name = []
description = []
rating = []
numofreviews = []
developer = []
for iteration in links_apps:
    try:
        driver.get(iteration)
        time.sleep(2)

        header1 = driver.find_element(By.TAG_NAME, "h1")
        descript = driver.find_element(By.XPATH, "//div[@class='section__description']").text
        rating1 = driver.find_element(By.XPATH, '//span[@class = "we-customer-ratings__averages__display"]').text
        reviewnum = driver.find_element(By.XPATH, '//div[@class = "we-customer-ratings__count small-hide medium-show"]').text
        developer1 = driver.find_element(By.XPATH, '//h2[@class = "product-header__identity app-header__identity"]').text
        name.append(header1.text)
        link.append(iteration)
        description.append(descript)
        rating.append(rating1)
        numofreviews.append(reviewnum)
        developer.append(developer1)
    except Exception as e:
        print(e)


df = pd.DataFrame({'App Name': name, 'Link': link, 'Description': description, 'Rating': rating, "Number of Reviews" : numofreviews, 'Developer':developer})
df.to_csv('appstore.csv')
print(df.head)
